/**
 * Golden Wings Documentary Screening RSVP Backend
 * Google Apps Script for handling form submissions and automation
 * Email: info@golden-wings-robyn.com
 * Screening: October 26, 2025 at 4:30 PM PST / 6:30 PM CST / 7:30 PM EST
 */

// WARNING: REPLACE 'SECRET' WITH YOUR ACTUAL reCAPTCHA SECRET KEY BEFORE DEPLOYING!
// NOTE: I am using the secret you last provided for integrity.
const RECAPTCHA_SECRET = '6LfXQvIrAAAAABzdyLniSfbcncBmU6H4q14eVTSt'; 


// Configuration
const CONFIG = {
  // âœ… CORRECTED SPREADSHEET ID âœ…
  spreadsheetId: '1tepMKJ6WLnXCmfmkV_tmDfSg_Qkgl6xF3KBtFu6gXMM', 
  sheetName: 'RSVPs',
  adminEmail: 'info@golden-wings-robyn.com',
  screening: {
    date: '2025-10-26',
    timePST: '16:30',
    timeCST: '18:30',
    timeEST: '19:30',
    // Total event time (documentary + Q&A)
    durationMinutes: 90, 
    venue: '747 First Class Lounge. Your boarding pass will arrive 24 hours before screening',
    documentaryDuration: '25 minutes' // The actual runtime of the film
  }
};

// --- Webhook Entry Points ---

/**
 * Google Apps Script entry point for GET requests
 * Returns a simple status message (safe to run manually)
 */
function doGet(e) {
  // Use optional chaining to safely check 'e' and 'e.parameter'
  if (e?.parameter?.status === 'check') { 
     return ContentService
      .createTextOutput(JSON.stringify({
        status: 'active',
        message: 'Golden Wings RSVP webhook is running',
        endpoint: 'POST to this URL with RSVP data',
        version: '2.0 - Final'
      }))
      .setMimeType(ContentService.MimeType.JSON);
  }
   // Default response for direct access or simple GETs
   return ContentService
    .createTextOutput("OK")
    .setMimeType(ContentService.MimeType.TEXT);
}

/**
 * Google Apps Script entry point for POST requests
 */
function doPost(e) {
  return handleRSVPSubmission(e);
}

// --- Core Logic ---

/**
 * Main function to handle Webflow form submissions.
 */
function handleRSVPSubmission(e) {
  let result = { success: false, error: 'Unknown error' };

  try {
    const formData = e.parameter || (e.postData?.contents ? JSON.parse(e.postData.contents) : {});

    // 1. Verify reCAPTCHA
    if (!verifyRecaptcha(formData.recaptcha)) {
      result.error = 'reCAPTCHA verification failed. Please try again.';
      throw new Error(result.error);
    }

    // 2. Input Validation
    if (!formData.name || !formData.email) {
       result.error = 'Missing required fields (name and email).';
       throw new Error(result.error);
    }
    if (!validateEmail(formData.email)) {
       result.error = 'Invalid email format.';
       throw new Error(result.error);
    }

    // 3. Standardize and Sanitize RSVP data
    const rsvpData = {
      timestamp: new Date(),
      name: sanitizeInput(formData.name),
      email: sanitizeInput(formData.email.toLowerCase()),
      phone: sanitizeInput(formData.phone) || '',
      specialRequests: sanitizeInput(formData.specialRequests) || '',
      source: sanitizeInput(formData.source) || 'website',
      status: 'confirmed'
    };

    // 4. Perform Automations
    saveToSpreadsheet(rsvpData);
    sendConfirmationEmail(rsvpData);
    sendAdminNotification(rsvpData);
    createCalendarEvent(rsvpData);

    result = { success: true, message: 'RSVP confirmed' };

  } catch (error) {
    console.error('Error handling RSVP:', error);
    result.error = error.message;

    // Send error notification to admin
    try {
        MailApp.sendEmail({
          to: CONFIG.adminEmail,
          subject: 'Golden Wings RSVP Error Notification',
          body: `Error processing RSVP: ${error.message}\n\nData received: ${JSON.stringify(e)}`
        });
    } catch (mailError) {
       console.error('Failed to send admin error notification:', mailError);
    }
  }

  // Return final JSON response
  return ContentService
    .createTextOutput(JSON.stringify(result))
    .setMimeType(ContentService.MimeType.JSON);
}

// --- Utilities (Email Validation, Sanitization, reCAPTCHA) ---

/**
 * Simple email validation using regex
 */
function validateEmail(email) {
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return emailRegex.test(email);
}

/**
 * Basic input sanitization to prevent spreadsheet injection
 */
function sanitizeInput(input) {
  if (typeof input !== 'string') return input;
  // Replace leading single quote or equals sign which can start a formula
  return input.replace(/^'|=/g, ''); 
}

/**
 * Verify reCAPTCHA response with Google
 */
function verifyRecaptcha(token) {
  if (!token || typeof token !== 'string') {
     console.warn('reCAPTCHA token is missing or invalid type.');
     return false;
  }

  const verifyUrl = 'https://www.google.com/recaptcha/api/siteverify';
  const payload = {
    secret: RECAPTCHA_SECRET,
    response: token
  };

  const options = {
    method: 'post',
    payload
  };

  try {
    const response = UrlFetchApp.fetch(verifyUrl, { ...options, muteHttpExceptions: true }); 
    const result = JSON.parse(response.getContentText());
    
    if (!result.success) {
        console.warn('reCAPTCHA verification failed. Errors:', result['error-codes']);
    }
    
    return result.success === true;
  } catch (err) {
    console.error('Error verifying reCAPTCHA:', err);
    return false;
  }
}

// --- Spreadsheet Functions ---

/**
 * Save RSVP data to Google Sheets
 */
function saveToSpreadsheet(rsvpData) {
  try {
    // ðŸ›‘ The error was likely due to this line needing authorization.
    const spreadsheet = SpreadsheetApp.openById(CONFIG.spreadsheetId);
    let sheet = spreadsheet.getSheetByName(CONFIG.sheetName);

    // If sheet doesn't exist, create it with headers
    if (!sheet) {
      sheet = createRSVPSheet(spreadsheet);
    }

    // Add row with RSVP data
    sheet.appendRow([
      rsvpData.timestamp,
      rsvpData.name,
      rsvpData.email,
      rsvpData.phone,
      rsvpData.specialRequests,
      rsvpData.source,
      rsvpData.status
    ]);
  } catch (error) {
    console.error('Failed to save to spreadsheet:', error);
    throw new Error('Spreadsheet save failed: ' + error.message);
  }
}

/**
 * Create the RSVP tracking sheet with headers
 */
function createRSVPSheet(spreadsheet) {
  const sheet = spreadsheet.insertSheet(CONFIG.sheetName);

  // Add headers
  sheet.getRange(1, 1, 1, 7).setValues([[
    'Timestamp',
    'Name',
    'Email',
    'Phone',
    'Special Requests',
    'Source',
    'Status'
  ]]);

  // Format headers
  sheet.getRange(1, 1, 1, 7).setFontWeight('bold').setBackground('#f0f0f0');
  sheet.autoResizeColumns(1, 7);
  
  return sheet; 
}

// --- Email Functions ---

/**
 * Send confirmation email to attendee
 */
function sendConfirmationEmail(rsvpData) {
  const subject = 'Your Golden Wings Documentary Screening RSVP Confirmed';

  // The iCalendar link below uses DTSTART:20251026T233000Z (4:30 PM PST) 
  // and DTEND:20251027T010000Z (6:00 PM PST) for the 90-minute event.
  const htmlBody = `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <div style="background: linear-gradient(135deg, #1e3a8a 0%, #3b82f6 100%); color: white; padding: 30px; text-align: center;">
        <h1 style="margin: 0; font-size: 28px;">Golden Wings</h1>
        <p style="margin: 10px 0 0 0; font-size: 16px; opacity: 0.9;">Documentary Screening</p>
      </div>

      <div style="padding: 30px; background: white;">
        <h2 style="color: #1e3a8a; margin-bottom: 20px;">Thank you for your RSVP, ${rsvpData.name}!</h2>

        <p>We're excited to confirm your reservation for the Golden Wings documentary screening and Q&A.</p>

        <div style="background: #f8fafc; border-left: 4px solid #3b82f6; padding: 20px; margin: 20px 0;">
          <h3 style="margin-top: 0; color: #1e3a8a;">Screening Details</h3>
          <p><strong>Date:</strong> Sunday, October 26, 2025</p>
          <p><strong>Time:</strong> ${CONFIG.screening.timePST} PST / ${CONFIG.screening.timeCST} CST / ${CONFIG.screening.timeEST} EST</p>
          <p><strong>Total Event Duration:</strong> ${CONFIG.screening.durationMinutes} minutes (includes Q&A)</p>
          <p><strong>Venue:</strong> ${CONFIG.screening.venue}</p>
          ${rsvpData.specialRequests ? `<p><strong>Special Requests:</strong> ${rsvpData.specialRequests}</p>` : ''}
        </div>

        <p>This powerful documentary follows Robyn Stewart's remarkable 50+ year career as an American Airlines flight attendant, capturing stories of courage, dedication, and the evolution of aviation.</p>

        <div style="text-align: center; margin: 30px 0;">
          <a href="data:text/calendar;charset=utf8,BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//Golden Wings//Documentary Screening//EN
BEGIN:VEVENT
UID:golden-wings-${Date.now()}@golden-wings-robyn.com
DTSTAMP:${new Date().toISOString().replace(/[-:]/g, '').split('.')[0]}Z
DTSTART:20251026T233000Z
DTEND:20251027T010000Z
SUMMARY:Golden Wings Documentary Screening and Q&A
DESCRIPTION:Join us for the screening of Golden Wings, a documentary about Robyn Stewart's 50+ year career as an American Airlines flight attendant. The event includes a post-screening Q&A session.
LOCATION:${CONFIG.screening.venue}
END:VEVENT
END:VCALENDAR"
              style="display: inline-block; background: #3b82f6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: bold;">
            Add to Calendar
          </a>
        </div>

        <p>We'll send additional details about the venue and any final information closer to the screening date.</p>

        <p>If you have any questions or need to modify your RSVP, please contact us at <a href="mailto:${CONFIG.adminEmail}">${CONFIG.adminEmail}</a>.</p>

        <p>We look forward to seeing you there!</p>

        <p style="margin-top: 30px; color: #6b7280; font-style: italic;">
          "Golden wings carry stories of courage, and every flight tells a tale of dedication that spans generations."
        </p>
      </div>

      <div style="background: #f8fafc; padding: 20px; text-align: center; color: #6b7280; font-size: 14px;">
        <p>Golden Wings Documentary | Directed by Caleb Mills Stewart</p>
        <p>For more information, visit <a href="https://gwingz.com" style="color: #3b82f6;">gwingz.com</a></p>
      </div>
    </div>
  `;

  try {
    MailApp.sendEmail({
      to: rsvpData.email,
      subject: subject,
      htmlBody: htmlBody,
      replyTo: CONFIG.adminEmail
    });
  } catch (error) {
     console.error('Failed to send confirmation email to attendee:', error);
  }
}

/**
 * Send notification to admin about new RSVP
 */
function sendAdminNotification(rsvpData) {
  const subject = `New RSVP: ${rsvpData.name}`;

  const body = `
New RSVP received for Golden Wings screening:

Name: ${rsvpData.name}
Email: ${rsvpData.email}
Phone: ${rsvpData.phone}
Special Requests: ${rsvpData.specialRequests || 'None'}
Source: ${rsvpData.source}
Timestamp: ${rsvpData.timestamp}

View all RSVPs: https://docs.google.com/spreadsheets/d/${CONFIG.spreadsheetId}
  `;
  
  try {
    MailApp.sendEmail({
      to: CONFIG.adminEmail,
      subject: subject,
      body: body
    });
  } catch (error) {
     console.error('Failed to send admin notification email:', error);
  }
}

// --- Calendar Function ---

/**
 * Create calendar event for the attendee (90 minutes total event time)
 */
function createCalendarEvent(rsvpData) {
  try {
    const calendar = CalendarApp.getDefaultCalendar();

    // The screening starts at 4:30 PM PST, which is 23:30 UTC
    const startTime = new Date('2025-10-26T23:30:00Z'); 
    
    // Total duration for the Screening + Q&A is 90 minutes
    const totalDurationMinutes = CONFIG.screening.durationMinutes; 
    
    // Calculate end time by adding 90 minutes (1.5 hours) to the start time (2025-10-27T01:00:00Z)
    const endTime = new Date(startTime.getTime() + totalDurationMinutes * 60 * 1000); 

    const event = calendar.createEvent(
      'Golden Wings Documentary Screening (with Q&A)',
      startTime,
      endTime,
      {
        description: `Golden Wings documentary screening, followed by a Q&A session.\n\nDocumentary Duration: ${CONFIG.screening.documentaryDuration}\nTotal Event Time: ${totalDurationMinutes} minutes\n\nAttendee: ${rsvpData.name}\n\nA powerful documentary following Robyn Stewart's remarkable 50+ year career as an American Airlines flight attendant.`,
        location: CONFIG.screening.venue, 
        guests: rsvpData.email, 
        sendInvites: false 
      }
    );

    console.log(`Calendar event created: ${event.getId()}`);
  } catch (error) {
    console.error('Error creating calendar event:', error);
  }
}

// --- Report and Trigger Functions ---

/**
 * Get RSVP statistics for admin dashboard
 */
function getRSVPStats() {
  try {
    const sheet = SpreadsheetApp.openById(CONFIG.spreadsheetId).getSheetByName(CONFIG.sheetName);
    if (!sheet) return { totalRSVPs: 0, confirmedRSVPs: 0, recentRSVPs: 0, message: 'RSVPs sheet not found.' };

    const data = sheet.getDataRange().getValues();
    const rsvps = data.slice(1);

    const stats = {
      totalRSVPs: rsvps.length,
      totalAttendees: rsvps.length, 
      confirmedRSVPs: rsvps.filter(row => row[6] === 'confirmed').length,
      recentRSVPs: rsvps.filter(row => {
        const rsvpDate = new Date(row[0]);
        const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);
        return rsvpDate > weekAgo;
      }).length
    };

    return stats;
  } catch (error) {
     console.error('Error fetching RSVP stats:', error);
     return { totalRSVPs: 0, confirmedRSVPs: 0, recentRSVPs: 0, message: 'Error fetching stats.' };
  }
}

/**
 * Send weekly RSVP report to admin
 */
function sendWeeklyReport() {
  const stats = getRSVPStats();

  const subject = `Golden Wings Screening - Weekly RSVP Report`;
  const body = `
Weekly RSVP Report for Golden Wings Documentary Screening
October 26, 2025 at 4:30 PM PST

Current Stats:
- Total RSVPs: ${stats.totalRSVPs}
- Total Attendees: ${stats.totalAttendees}
- Confirmed RSVPs: ${stats.confirmedRSVPs}
- New RSVPs This Week: ${stats.recentRSVPs}

${stats.message ? `NOTE: ${stats.message}` : ''}

View full RSVP list: https://docs.google.com/spreadsheets/d/${CONFIG.spreadsheetId}

Next steps:
- Confirm venue details
- Send reminder emails 1 week before screening
- Prepare final headcount for venue

Golden Wings Team
  `;

  try {
    MailApp.sendEmail({
      to: CONFIG.adminEmail,
      subject: subject,
      body: body
    });
  } catch (error) {
     console.error('Failed to send weekly report:', error);
  }
}

/**
 * Set up time-driven trigger for weekly reports
 */
function createWeeklyReportTrigger() {
  // Delete existing triggers to prevent duplicates
  const triggers = ScriptApp.getProjectTriggers();
  for (let i = 0; i < triggers.length; i++) {
    if (triggers[i].getHandlerFunction() === 'sendWeeklyReport') {
      ScriptApp.deleteTrigger(triggers[i]);
    }
  }
  
  ScriptApp.newTrigger('sendWeeklyReport')
    .timeBased()
    .everyWeeks(1)
    .onWeekDay(ScriptApp.WeekDay.MONDAY)
    .atHour(9) // 9 AM in the script's timezone (check Project Settings)
    .create();
    
  Logger.log('Weekly report trigger created for Monday at 9 AM.');
}